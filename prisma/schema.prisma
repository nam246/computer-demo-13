generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
  // <---- important to support Prisma Query engine in Alpine linux, otherwise "PrismaClientInitializationError2 [PrismaClientInitializationError]: 
  // Query engine binary for current platform "linux-musl" could not be found."
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model media {
  id         Int      @id @default(autoincrement())
  name       String
  created_at DateTime @default(now())
}

model products_categories {
  product_id  Int
  category_id Int
  assignedAt  DateTime @default(now())
  assignedBy  String
  category    category @relation(fields: [category_id], references: [id], onDelete: Cascade)
  product     product  @relation(fields: [product_id], references: [id], onDelete: Cascade)

  @@id([product_id, category_id])
}

model category {
  id                  Int                   @id @default(autoincrement())
  name                String
  slug                String?
  description         String?
  content             String?
  image               String?
  parent_id           Int?
  parent              category?             @relation("hierarchy_category", fields: [parent_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  children            category[]            @relation("hierarchy_category")
  products_categories products_categories[]
}

model product {
  id                  Int                   @id @default(autoincrement())
  title               String
  slug                String?
  description         String?
  content             String?
  image               String?
  price               String?
  products_categories products_categories[]
}

model page {
  id          Int       @id @default(autoincrement())
  title       String
  slug        String?
  description String?
  content     String?
  image       String?
  created_at  DateTime  @default(now())
  updated_at  DateTime?
}

model user {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String?
}
